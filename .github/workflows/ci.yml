name: CI

env:
  NODE_OPTIONS: --max-old-space-size=6144
  FETCH_DEPTH: 50
  NODE_VERSION: 22
  TESTS_TIMEOUT: 20
  LINT_TIMEOUT: 10
  HUSKY: 0

permissions: {}

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  changed:
    name: Get changed files
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.changed-files.outputs.only_changed == 'true' }}

    steps:
      - name: Chekout
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@dcc7a0cba800f454d79fff4b993e8c3555bcc0a8 # v45.0.7
        with:
          files: |
            .github/**
            !.github/workflows/ci.yml
            **.md

  test:
    needs: changed
    if: needs.changed.outputs.should_skip != 'true'
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [22]
        include:
          # Active LTS + other OS
          - os: macos-latest
            node_version: 22
          - os: windows-latest
            node_version: 22
      fail-fast: false

    name: 'Test & Build: ${{ matrix.os }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4.1.0

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: Install deps
        run: pnpm install

      # TODO - uncomment when refactored
      # - name: Test
      #   run: pnpm run test

      - name: Build
        run: pnpm run build

  test-passed:
    if: (!cancelled() && !failure())
    needs: test
    runs-on: ubuntu-latest
    name: Build & Test Passed or Skipped
    steps:
      - run: echo "Build & Test Passed or Skipped"

  test-failed:
    if: (!cancelled() && failure())
    needs: test
    runs-on: ubuntu-latest
    name: Build & Test Failed
    steps:
      - run: echo "Build & Test Failed"

  lint:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    name: 'Lint'
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4.1.0

      - name: Set node version to ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'

      - name: Install deps
        run: pnpm install

      - name: Check formatting
        run: pnpm run prettier

      # TODO - uncommenct when lint fixed
      # - name: Lint
      #   run: pnpm run lint

      # From https://github.com/rhysd/actionlint/blob/main/docs/usage.md#use-actionlint-on-github-actions
      - name: Check workflow files
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color -shellcheck=""

# jobs:
#   main:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       # This enables task distribution via Nx Cloud
#       # Run this command as early as possible, before dependencies are installed
#       # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
#       # Uncomment this line to enable task distribution
#       # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

#       # Cache node_modules
#       - uses: actions/setup-node@v4
#         with:
#           node-version: 22
#           cache: 'npm'

#       - run: npm ci --legacy-peer-deps
#       - uses: nrwl/nx-set-shas@v4

#       # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
#       # - run: npx nx-cloud record -- echo Hello World
#       # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
#       - run: npx nx affected -t lint test build
